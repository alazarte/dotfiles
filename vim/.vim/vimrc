set nocompatible

call plug#begin('~/.vim/plugins')
Plug 'fatih/vim-go'
Plug 'vimwiki/vimwiki'
call plug#end()

" hidden buffer to hold changes in current file with changes
set hidden
set wildmenu
set wildmode=list
set cursorline
set showcmd
set relativenumber
set number
" show trailing chars
set list lcs=tab:\>\ ,trail:.
set tags=tags
" . current directory for file
" current directory ...
" ** recursive
set path=**
" show @@@ if line is truncated
set laststatus=2
set nowrap
set statusline=%y\ %f\ %m\ %r\ %w\ %q\ %=%P\ %l:%c

" Configure netrw
" keep in the dir where I open netrw
let g:netrw_keepdir=1
" no banner
let g:netrw_banner=0
let g:netrw_winsize=20

nmap <leader>e :Lexplore<cr>

" Configure colorscheme
colorscheme default
set background=dark

hi LineNr ctermfg=darkgray
hi CursorLine cterm=none
hi CursorLineNr cterm=bold ctermfg=yellow
hi SpellBad ctermfg=white ctermbg=red
hi SpellRare ctermfg=black ctermbg=cyan
hi Todo ctermbg=red ctermfg=white cterm=bold
hi Visual ctermfg=white ctermbg=blue
hi diffRemoved ctermfg=red ctermbg=none
hi diffAdded ctermfg=green ctermbg=none
hi diffFile ctermfg=cyan ctermbg=none
hi diffOldFile ctermfg=cyan ctermbg=none
hi diffNewFile ctermfg=cyan ctermbg=none
hi markdownCodeBlock ctermfg=gray ctermbg=none
hi markdownCode ctermfg=gray ctermbg=none

" spelling
map <leader>s :setlocal spell! spelllang=en_us<cr>
" vim config
map <leader>v <esc>:e ~/.vim/vimrc<cr>
map <leader>l <esc>:so ~/.vim/vimrc<cr>
" gf open file even if it does not exists
map gf :e <cfile><CR>
" check changes in file before saving
" to mayus 'cause vimwiki mapping...
map <leader>W :w ! diff --color % -<cr>
" insert output date to current cursor position
map <leader>d :r!date '+\%Y-\%m-\%d \%H:\%M'<cr>kJ
" adding kJ to append to previous line instead of new line

" keep current buffer and delete all the rest
command! BufOnly silent! execute "%bd|e#|bd#"

" augroups
" from $VIMRUNTIME/defaults.vim
augroup vimStartup
  au!
  " When editing a file, always jump to the last known cursor position.
  " Don't do it when the position is invalid, when inside an event handler
  " (happens when dropping a file on gvim) and for a commit message (it's
  " likely a different one than last time).
  autocmd BufReadPost *
  \ if line("'\"") >= 1 && line("'\"") <= line("$") && &ft !~# 'commit'
  \ |   exe "normal! g`\""
  \ | endif
augroup END

" ==== VIMWIKI config ====
" new config
let wiki_1 = {}
let wiki_1.path = '/home/al/data/vimwiki'
let wiki_2 = {}
let wiki_2.path = '~/dev/blog'
let wiki_2.syntax = 'markdown'
let wiki_2.ext = '.markdown'
" list of wikis
let g:vimwiki_list = [wiki_1, wiki_2]
